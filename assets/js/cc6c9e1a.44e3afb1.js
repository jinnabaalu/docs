"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1188],{5846:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"vector-db/ChromaDB","title":"Chroma","description":"Learn how to run Chroma DB with Docker Compose, persist your embeddings, and perform basic vector search queries.","source":"@site/docs/vector-db/ChromaDB.md","sourceDirName":"vector-db","slug":"/VectorDB/ChromaDB","permalink":"/oio/docs/VectorDB/ChromaDB","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vector-db/ChromaDB.md","tags":[{"inline":true,"label":"chroma","permalink":"/oio/docs/tags/chroma"},{"inline":true,"label":"docker","permalink":"/oio/docs/tags/docker"},{"inline":true,"label":"vector-db","permalink":"/oio/docs/tags/vector-db"},{"inline":true,"label":"rag","permalink":"/oio/docs/tags/rag"},{"inline":true,"label":"llm","permalink":"/oio/docs/tags/llm"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Chroma","author":"Baalu","sidebar_position":1,"tags":["chroma","docker","vector-db","rag","llm"],"description":"Learn how to run Chroma DB with Docker Compose, persist your embeddings, and perform basic vector search queries.","slug":"/VectorDB/ChromaDB"},"sidebar":"tutorialSidebar","previous":{"title":"Vector Databases","permalink":"/oio/docs/category/vector-databases"},"next":{"title":"Qdrant","permalink":"/oio/docs/VectorDB/Qdrant"}}');var s=r(4848),t=r(8453);const a={title:"Chroma",author:"Baalu",sidebar_position:1,tags:["chroma","docker","vector-db","rag","llm"],description:"Learn how to run Chroma DB with Docker Compose, persist your embeddings, and perform basic vector search queries.",slug:"/VectorDB/ChromaDB"},c="Running Chroma DB with Docker Compose and Sample Queries",i={},l=[{value:"\ud83d\udd27 Step 1: Docker Compose Setup",id:"-step-1-docker-compose-setup",level:2},{value:"\u25b6\ufe0f Step 2: Start the Service",id:"\ufe0f-step-2-start-the-service",level:2},{value:"\ud83e\udde0 Step 3: Run Sample Python Queries",id:"-step-3-run-sample-python-queries",level:2},{value:"\ud83d\udcc2 Step 4: Persistence",id:"-step-4-persistence",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"running-chroma-db-with-docker-compose-and-sample-queries",children:"Running Chroma DB with Docker Compose and Sample Queries"})}),"\n",(0,s.jsx)(n.p,{children:"Chroma is an open-source embedding database purpose-built for LLMs, vector search, and RAG pipelines. This post shows how to run Chroma using Docker Compose and interact with it using Python."}),"\n",(0,s.jsx)(n.h2,{id:"-step-1-docker-compose-setup",children:"\ud83d\udd27 Step 1: Docker Compose Setup"}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file with the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"version: '3.8'\n\nservices:\n  chroma:\n    image: ghcr.io/chroma-core/chroma:latest\n    container_name: chroma-db\n    ports:\n      - \"8000:8000\"\n    environment:\n      - IS_PERSISTENT=TRUE\n      - PERSIST_DIRECTORY=/chroma-data\n    volumes:\n      - ./chroma-data:/chroma-data\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-step-2-start-the-service",children:"\u25b6\ufe0f Step 2: Start the Service"}),"\n",(0,s.jsx)(n.p,{children:"Run the container:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,s.jsx)(n.p,{children:"Check if it\u2019s live:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8000\n"})}),"\n",(0,s.jsx)(n.p,{children:"You should see:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{"message":"Chroma is running!"}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-step-3-run-sample-python-queries",children:"\ud83e\udde0 Step 3: Run Sample Python Queries"}),"\n",(0,s.jsx)(n.p,{children:"Install the client:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install chromadb\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then create a ",(0,s.jsx)(n.code,{children:"sample.py"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import chromadb\nfrom chromadb.config import Settings\n\nclient = chromadb.HttpClient(\n    host="localhost", port=8000, settings=Settings()\n)\n\ncollection = client.get_or_create_collection(name="baalu-demo")\n\ncollection.add(\n    documents=["Chroma is a vector DB", "Gen Z loves fast APIs"],\n    metadatas=[{"source": "doc1"}, {"source": "doc2"}],\n    ids=["id1", "id2"]\n)\n\nresults = collection.query(\n    query_texts=["What do Gen Z love?"], n_results=2\n)\n\nprint(results)\n'})}),"\n",(0,s.jsx)(n.p,{children:"Run the script:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python sample.py\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-step-4-persistence",children:"\ud83d\udcc2 Step 4: Persistence"}),"\n",(0,s.jsx)(n.p,{children:"Your vector DB is persistent across restarts thanks to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"volumes:\n  - ./chroma-data:/chroma-data\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Everything is saved in ",(0,s.jsx)(n.code,{children:"./chroma-data"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Chroma gives you the speed and simplicity Gen Z devs need. Ready for LLM, RAG, or app integration. \ud83d\udd25"}),"\n",(0,s.jsx)(n.p,{children:"Let me know if you want to plug this into FastAPI, LangChain, or OpenAI pipelines next."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var o=r(6540);const s={},t=o.createContext(s);function a(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);