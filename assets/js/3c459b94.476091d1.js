"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6434],{3573:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"elasticsearch/high-availability-elasticsearch-cluster/ClusterFailureSimulation","title":"\ud83d\udc33 Elasticsearch 3-Node Cluster Failure Simulation","description":"Simulate and manage three-node Elasticsearch cluster failures, observe failover behavior, and recover using Docker containers.","source":"@site/docs/elasticsearch/high-availability-elasticsearch-cluster/ClusterFailureSimulation.md","sourceDirName":"elasticsearch/high-availability-elasticsearch-cluster","slug":"/ElasticStack/Elasticsearch-3-NodeClusterFailureSimulation","permalink":"/oio/docs/ElasticStack/Elasticsearch-3-NodeClusterFailureSimulation","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/elasticsearch/high-availability-elasticsearch-cluster/ClusterFailureSimulation.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"\ud83d\udc33 Elasticsearch 3-Node Cluster Failure Simulation","description":"Simulate and manage three-node Elasticsearch cluster failures, observe failover behavior, and recover using Docker containers.","slug":"/ElasticStack/Elasticsearch-3-NodeClusterFailureSimulation","keywords":["Elasticsearch","3-Node Cluster","Cluster Failure Simulation","Docker","High Availability","Failover","Elasticsearch Recovery","Node Failure"],"author":"Jinna Baalu"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udc33 Elasticsearch 3-Node Cluster Setup","permalink":"/oio/docs/ElasticStack/elasticsearch-3-node"},"next":{"title":"Components of Index","permalink":"/oio/docs/category/components-of-index"}}');var l=t(4848),r=t(8453);const n={sidebar_position:3,title:"\ud83d\udc33 Elasticsearch 3-Node Cluster Failure Simulation",description:"Simulate and manage three-node Elasticsearch cluster failures, observe failover behavior, and recover using Docker containers.",slug:"/ElasticStack/Elasticsearch-3-NodeClusterFailureSimulation",keywords:["Elasticsearch","3-Node Cluster","Cluster Failure Simulation","Docker","High Availability","Failover","Elasticsearch Recovery","Node Failure"],author:"Jinna Baalu"},i="Simulate and Manage Elasticsearch 3-Node Cluster Failures",o={},c=[{value:"1. Current Setup",id:"1-current-setup",level:2},{value:"2. Simulate Node Failures (Taking Down Nodes)",id:"2-simulate-node-failures-taking-down-nodes",level:2},{value:"Scenario 1: Take Down One Node",id:"scenario-1-take-down-one-node",level:3},{value:"Step 1: Check Cluster Health",id:"step-1-check-cluster-health",level:4},{value:"Step 2: Stop One Node",id:"step-2-stop-one-node",level:4},{value:"Step 3: Check Cluster Health After Failure",id:"step-3-check-cluster-health-after-failure",level:4},{value:"Scenario 2: Take Down Two Nodes",id:"scenario-2-take-down-two-nodes",level:3},{value:"Step 1: Stop Two Nodes",id:"step-1-stop-two-nodes",level:4},{value:"Step 2: Check Cluster Health After Two Nodes Fail",id:"step-2-check-cluster-health-after-two-nodes-fail",level:4},{value:"Scenario 3: Take Down All Three Nodes",id:"scenario-3-take-down-all-three-nodes",level:3},{value:"Step 1: Stop All Three Nodes",id:"step-1-stop-all-three-nodes",level:4},{value:"Step 2: Check the Cluster Health (Should Be Unavailable)",id:"step-2-check-the-cluster-health-should-be-unavailable",level:4},{value:"3. Bringing the Nodes Back Up",id:"3-bringing-the-nodes-back-up",level:2},{value:"Step 1: Start the Nodes Again",id:"step-1-start-the-nodes-again",level:3},{value:"Step 2: Check Cluster Health After Recovery",id:"step-2-check-cluster-health-after-recovery",level:3},{value:"4. Key Takeaways",id:"4-key-takeaways",level:2}];function h(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.header,{children:(0,l.jsx)(a.h1,{id:"simulate-and-manage-elasticsearch-3-node-cluster-failures",children:"Simulate and Manage Elasticsearch 3-Node Cluster Failures"})}),"\n",(0,l.jsx)(a.p,{children:"In this guide, we will simulate various failure scenarios in a 3-node Elasticsearch cluster running in Docker containers. By simulating node failures and observing Elasticsearch's behavior, we will also cover how the cluster recovers automatically."}),"\n",(0,l.jsx)(a.h2,{id:"1-current-setup",children:"1. Current Setup"}),"\n",(0,l.jsxs)(a.p,{children:["We have a ",(0,l.jsx)(a.strong,{children:"3-node Elasticsearch cluster"})," running inside Docker containers. The cluster is configured with ",(0,l.jsx)(a.strong,{children:"replicas"})," to ensure high availability and data redundancy. Each node is responsible for a portion of the data, and replicas are automatically managed to ensure that data is available even if a node fails."]}),"\n",(0,l.jsx)(a.hr,{}),"\n",(0,l.jsx)(a.h2,{id:"2-simulate-node-failures-taking-down-nodes",children:"2. Simulate Node Failures (Taking Down Nodes)"}),"\n",(0,l.jsx)(a.h3,{id:"scenario-1-take-down-one-node",children:"Scenario 1: Take Down One Node"}),"\n",(0,l.jsx)(a.p,{children:"Simulate a single-node failure to observe how Elasticsearch handles it."}),"\n",(0,l.jsx)(a.h4,{id:"step-1-check-cluster-health",children:"Step 1: Check Cluster Health"}),"\n",(0,l.jsx)(a.p,{children:"Before taking down a node, check the health of the cluster:"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:'curl -X GET "localhost:9200/_cluster/health?pretty=true"\n'})}),"\n",(0,l.jsx)(a.h4,{id:"step-2-stop-one-node",children:"Step 2: Stop One Node"}),"\n",(0,l.jsx)(a.p,{children:"Stop one of the Elasticsearch Docker containers to simulate the failure of a single node"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:"docker stop <container_name>\n"})}),"\n",(0,l.jsx)(a.h4,{id:"step-3-check-cluster-health-after-failure",children:"Step 3: Check Cluster Health After Failure"}),"\n",(0,l.jsx)(a.p,{children:"After stopping the node, check the cluster health again. You should see a yellow status as the replicas are promoted to primary shards"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:'curl -X GET "localhost:9200/_cluster/health?pretty=true"\n'})}),"\n",(0,l.jsx)(a.h3,{id:"scenario-2-take-down-two-nodes",children:"Scenario 2: Take Down Two Nodes"}),"\n",(0,l.jsx)(a.p,{children:"Simulate the failure of two nodes and see how the cluster handles more significant failures."}),"\n",(0,l.jsx)(a.h4,{id:"step-1-stop-two-nodes",children:"Step 1: Stop Two Nodes"}),"\n",(0,l.jsx)(a.p,{children:"Stop two Elasticsearch Docker containers to simulate the failure of two nodes"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:"docker stop <container_name_1> <container_name_2>\n"})}),"\n",(0,l.jsx)(a.h4,{id:"step-2-check-cluster-health-after-two-nodes-fail",children:"Step 2: Check Cluster Health After Two Nodes Fail"}),"\n",(0,l.jsx)(a.p,{children:"After stopping the two nodes, check the cluster health. It will likely show a red status, indicating that some data may be lost or unavailable. This is because with two nodes down, the cluster no longer has enough replicas or primary shards to maintain full availability:"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:'curl -X GET "localhost:9200/_cluster/health?pretty=true"\n'})}),"\n",(0,l.jsx)(a.h3,{id:"scenario-3-take-down-all-three-nodes",children:"Scenario 3: Take Down All Three Nodes"}),"\n",(0,l.jsx)(a.p,{children:"Simulate a total failure by taking down all three nodes."}),"\n",(0,l.jsx)(a.h4,{id:"step-1-stop-all-three-nodes",children:"Step 1: Stop All Three Nodes"}),"\n",(0,l.jsx)(a.p,{children:"Stop all three Elasticsearch Docker containers to simulate the failure of all nodes"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:"docker stop <container_name_1> <container_name_2> <container_name_3>\n"})}),"\n",(0,l.jsx)(a.h4,{id:"step-2-check-the-cluster-health-should-be-unavailable",children:"Step 2: Check the Cluster Health (Should Be Unavailable)"}),"\n",(0,l.jsx)(a.p,{children:"At this point, the cluster is completely down. You can confirm this by checking the health again, which should show a red status since no nodes are available to handle the requests:"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:'curl -X GET "localhost:9200/_cluster/health?pretty=true"\n'})}),"\n",(0,l.jsx)(a.h2,{id:"3-bringing-the-nodes-back-up",children:"3. Bringing the Nodes Back Up"}),"\n",(0,l.jsx)(a.h3,{id:"step-1-start-the-nodes-again",children:"Step 1: Start the Nodes Again"}),"\n",(0,l.jsx)(a.p,{children:"To recover the cluster, start the stopped containers one by one"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:"docker start <container_name_1>\ndocker start <container_name_2>\ndocker start <container_name_3>\n"})}),"\n",(0,l.jsx)(a.h3,{id:"step-2-check-cluster-health-after-recovery",children:"Step 2: Check Cluster Health After Recovery"}),"\n",(0,l.jsx)(a.p,{children:"After restarting all the nodes, check the cluster health again. It should eventually return to a green status once Elasticsearch has fully recovered and rebalanced the data"}),"\n",(0,l.jsx)(a.pre,{children:(0,l.jsx)(a.code,{className:"language-bash",children:'curl -X GET "localhost:9200/_cluster/health?pretty=true"\n'})}),"\n",(0,l.jsx)(a.h2,{id:"4-key-takeaways",children:"4. Key Takeaways"}),"\n",(0,l.jsxs)(a.p,{children:[(0,l.jsx)(a.strong,{children:"Replica and Failover"}),": Elasticsearch ensures high availability by promoting replicas when primary nodes fail. However, failure of multiple nodes can cause data unavailability or loss if replicas are insufficient."]}),"\n",(0,l.jsxs)(a.p,{children:[(0,l.jsx)(a.strong,{children:"Health Monitoring"}),": Use curl commands to monitor the cluster health during different failure scenarios."]}),"\n",(0,l.jsxs)(a.p,{children:[(0,l.jsx)(a.strong,{children:"Automatic Recovery"}),": When nodes come back online, Elasticsearch will automatically recover and rebalance the cluster to restore full health."]})]})}function d(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,l.jsx)(a,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>n,x:()=>i});var s=t(6540);const l={},r=s.createContext(l);function n(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);