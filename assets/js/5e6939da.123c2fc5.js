"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4331],{1754:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"vector-db/Marqo","title":"Marqo","description":"Learn how to run Marqo, an open-source multi-modal vector search engine, with Docker and perform text and image queries.","source":"@site/docs/vector-db/Marqo.md","sourceDirName":"vector-db","slug":"/VectorDB/Marqo","permalink":"/oio/docs/VectorDB/Marqo","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/vector-db/Marqo.md","tags":[{"inline":true,"label":"marqo","permalink":"/oio/docs/tags/marqo"},{"inline":true,"label":"docker","permalink":"/oio/docs/tags/docker"},{"inline":true,"label":"vector-db","permalink":"/oio/docs/tags/vector-db"},{"inline":true,"label":"multimodal","permalink":"/oio/docs/tags/multimodal"},{"inline":true,"label":"llm","permalink":"/oio/docs/tags/llm"},{"inline":true,"label":"langchain","permalink":"/oio/docs/tags/langchain"}],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Marqo","author":"Baalu","sidebar_position":3,"tags":["marqo","docker","vector-db","multimodal","llm","langchain"],"description":"Learn how to run Marqo, an open-source multi-modal vector search engine, with Docker and perform text and image queries.","slug":"/VectorDB/Marqo"},"sidebar":"tutorialSidebar","previous":{"title":"Qdrant","permalink":"/oio/docs/VectorDB/Qdrant"},"next":{"title":"Use Cases","permalink":"/oio/docs/category/use-cases"}}');var t=a(4848),o=a(8453);const i={title:"Marqo",author:"Baalu",sidebar_position:3,tags:["marqo","docker","vector-db","multimodal","llm","langchain"],description:"Learn how to run Marqo, an open-source multi-modal vector search engine, with Docker and perform text and image queries.",slug:"/VectorDB/Marqo"},s="Running Marqo with Docker and Performing Vector Search on Multi-Modal Data",l={},c=[{value:"\ud83d\udd27 Step 1(a): Docker RUN",id:"-step-1a-docker-run",level:2},{value:"\ud83d\udd27 Step 1(b): Docker Compose Setup",id:"-step-1b-docker-compose-setup",level:2},{value:"\u25b6\ufe0f Step 1(b).1: Start Qdrant",id:"\ufe0f-step-1b1-start-qdrant",level:3},{value:"\u25b6\ufe0f Step 2: Health Check",id:"\ufe0f-step-2-health-check",level:2},{value:"\ud83e\udde0 Step 3: Sample Python Queries with LangChain",id:"-step-3-sample-python-queries-with-langchain",level:2},{value:"\ud83d\udcc2 Step 4: Multi-Modal Power",id:"-step-4-multi-modal-power",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"running-marqo-with-docker-and-performing-vector-search-on-multi-modal-data",children:"Running Marqo with Docker and Performing Vector Search on Multi-Modal Data"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.marqo.ai/",children:"Marqo"})," is an open-source vector search engine purpose-built for multi-modal data (text, images, and beyond). It handles vector generation internally using open-source or custom models and integrates well with LangChain and LLM workflows."]}),"\n",(0,t.jsx)(n.p,{children:"Here\u2019s how to set it up with Docker and run basic multi-modal vector queries."}),"\n",(0,t.jsx)(n.h2,{id:"-step-1a-docker-run",children:"\ud83d\udd27 Step 1(a): Docker RUN"}),"\n",(0,t.jsx)(n.p,{children:"Pull and run Marqo:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker pull marqoai/marqo:latest\ndocker rm -f marqo\ndocker run --name marqo -it --privileged -p 8882:8882 --add-host host.docker.internal:host-gateway marqoai/marqo:latest\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This runs Marqo on ",(0,t.jsx)(n.code,{children:"http://localhost:8882"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"-step-1b-docker-compose-setup",children:"\ud83d\udd27 Step 1(b): Docker Compose Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  marqo:\n    image: marqoai/marqo:latest\n    container_name: marqo\n    privileged: true\n    ports:\n      - "8882:8882"\n    extra_hosts:\n      - "host.docker.internal:host-gateway"\n    restart: unless-stopped\n    volumes:\n      - ./marqo_data:/workspace\n\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This exposes Qdrant on port ",(0,t.jsx)(n.code,{children:"8882"})," and persists data in ",(0,t.jsx)(n.code,{children:"./marqo_data"})," on the host from the container path ",(0,t.jsx)(n.code,{children:"./workspace"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"\ufe0f-step-1b1-start-qdrant",children:"\u25b6\ufe0f Step 1(b).1: Start Qdrant"}),"\n",(0,t.jsx)(n.p,{children:"Start the container:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-step-2-health-check",children:"\u25b6\ufe0f Step 2: Health Check"}),"\n",(0,t.jsx)(n.p,{children:"Ping Marqo to check it\u2019s alive:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8882/version\n"})}),"\n",(0,t.jsx)(n.p,{children:"Expected output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{"version":"<some-version>"}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-step-3-sample-python-queries-with-langchain",children:"\ud83e\udde0 Step 3: Sample Python Queries with LangChain"}),"\n",(0,t.jsx)(n.p,{children:"Install the client and LangChain community module:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install marqo\npip install -qU langchain-community\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Create a sample script ",(0,t.jsx)(n.code,{children:"sample.py"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import marqo\n\nclient = marqo.Client(url="http://localhost:8882")\n\n# Create an index\nclient.create_index("baalu-multimodal", model="ViT-B/32")  # uses CLIP-based model\n\n# Add documents (text + image)\nclient.index("baalu-multimodal").add_documents([\n    {\n        "Title": "The Leaning Tower of Pisa",\n        "Description": "A famous landmark in Italy",\n        "_image": "https://upload.wikimedia.org/wikipedia/commons/6/6b/Leaning_Tower_of_Pisa_2.jpg"\n    },\n    {\n        "Title": "Eiffel Tower",\n        "Description": "Paris landmark with iron structure"\n    }\n])\n\n# Search with text\nresults = client.index("baalu-multimodal").search("tilted tower in Italy")\nprint(results)\n'})}),"\n",(0,t.jsx)(n.p,{children:"Run the script:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python sample.py\n"})}),"\n",(0,t.jsx)(n.p,{children:"Marqo will auto-vectorize and rank documents using its internal model."}),"\n",(0,t.jsx)(n.h2,{id:"-step-4-multi-modal-power",children:"\ud83d\udcc2 Step 4: Multi-Modal Power"}),"\n",(0,t.jsx)(n.p,{children:"Marqo supports:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Text queries over text + images"}),"\n",(0,t.jsx)(n.li,{children:"Image queries over text + images"}),"\n",(0,t.jsx)(n.li,{children:"Custom models (host your own)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"No need to manually embed anything \u2014 Marqo handles the vectorization pipeline internally."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"Marqo makes building semantic + visual search insanely easy. Ready to go full multi-modal with zero vector math. \ud83d\udca5"}),"\n",(0,t.jsx)(n.p,{children:"Let me know if you want to plug it into LangChain or build a full RAG stack with it."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var r=a(6540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);