"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5085],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},8898:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"elasticsearch/index/StructuredAndUnstructuredData","title":"Structured and Unstructured Data","description":"Learn how to perform Create, Read, Update, and Delete operations with Elasticsearch using REST APIs in your local Docker setup.","source":"@site/docs/elasticsearch/index/StructuredAndUnstructuredData.md","sourceDirName":"elasticsearch/index","slug":"/ElasticStack/ExecuteCRUDOnElasticsearchAPI","permalink":"/oio/docs/ElasticStack/ExecuteCRUDOnElasticsearchAPI","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/elasticsearch/index/StructuredAndUnstructuredData.md","tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"Structured and Unstructured Data","description":"Learn how to perform Create, Read, Update, and Delete operations with Elasticsearch using REST APIs in your local Docker setup.","sidebar_position":12,"slug":"/ElasticStack/ExecuteCRUDOnElasticsearchAPI"},"sidebar":"tutorialSidebar","previous":{"title":"\ud83c\udf0d Language-Specific Analyzers in Elasticsearch","permalink":"/oio/docs/elasticsearch/index/AnalyzerLanguage"},"next":{"title":"Logstash Pipelines","permalink":"/oio/docs/category/logstash-pipelines"}}');var i=t(4848),r=t(8453);const a={title:"Structured and Unstructured Data",description:"Learn how to perform Create, Read, Update, and Delete operations with Elasticsearch using REST APIs in your local Docker setup.",sidebar_position:12,slug:"/ElasticStack/ExecuteCRUDOnElasticsearchAPI"},c="",d={},o=[{value:"\ud83d\udd0d Inverted Indexes: The Backbone of Search",id:"-inverted-indexes-the-backbone-of-search",level:2},{value:"\ud83e\udde0 What is an Inverted Index?",id:"-what-is-an-inverted-index",level:3},{value:"\ud83d\udee0\ufe0f How Lucene Builds the Inverted Index",id:"\ufe0f-how-lucene-builds-the-inverted-index",level:3}];function l(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:""})}),"\n",(0,i.jsx)(n.h2,{id:"-inverted-indexes-the-backbone-of-search",children:"\ud83d\udd0d Inverted Indexes: The Backbone of Search"}),"\n",(0,i.jsx)(n.h3,{id:"-what-is-an-inverted-index",children:"\ud83e\udde0 What is an Inverted Index?"}),"\n",(0,i.jsxs)(n.p,{children:["Forget the traditional row-column format. Inverted indexes flip the data structure:\nInstead of ",(0,i.jsx)(n.strong,{children:'"document \u2192 list of words"'}),", you get ",(0,i.jsx)(n.strong,{children:'"word \u2192 list of documents"'}),"."]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udca1 Real-World Analogy google search or wikipedia search."}),"\n",(0,i.jsx)(n.h3,{id:"\ufe0f-how-lucene-builds-the-inverted-index",children:"\ud83d\udee0\ufe0f How Lucene Builds the Inverted Index"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tokenization"}),": Break text into tokens using analyzers (like StandardAnalyzer)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Normalization"}),': Lowercasing, stemming (e.g., "running" \u2192 "run").']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Term Dictionary"}),": A sorted list of unique terms."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Posting List"}),": For each term, store:"]}),"\n",(0,i.jsx)(n.p,{children:"Doc IDs"}),"\n",(0,i.jsx)(n.p,{children:"Term frequencies"}),"\n",(0,i.jsx)(n.p,{children:"Positions (for phrase queries)"}),"\n",(0,i.jsx)(n.p,{children:"Offsets (for highlighting)"}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udd04 Updates and Deletes\nLucene is immutable. Docs are marked deleted, and new segments are written. Later, segments merge."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Inverted Indexes\nLucene Index (How Indexing Works)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"How inverted index works, detailsed explainaation"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Types of Indexes"}),"\n",(0,i.jsxs)(n.li,{children:["Types of data","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"structured and unstructure"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Mappings","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"mappings and without mappings indexes"}),"\n",(0,i.jsx)(n.li,{children:"template based index creation"}),"\n",(0,i.jsx)(n.li,{children:"enablle and diable analysis?"}),"\n",(0,i.jsx)(n.li,{children:"cstomising for search performance"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Settings","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"explain about multiple settings of indexes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.elastic.co/docs/api/doc/elasticsearch/group/endpoint-indices",children:"https://www.elastic.co/docs/api/doc/elasticsearch/group/endpoint-indices"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);