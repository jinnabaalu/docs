"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2313],{4976:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"elasticsearch/2019-08-29-Elasticsearch-Kibana-using-Docker-Compose","title":"2019-08-29-Elasticsearch-Kibana-using-Docker-Compose","description":"Preface","source":"@site/docs/elasticsearch/2019-08-29-Elasticsearch-Kibana-using-Docker-Compose.md","sourceDirName":"elasticsearch","slug":"/elasticsearch/2019-08-29-Elasticsearch-Kibana-using-Docker-Compose","permalink":"/docs/elasticsearch/2019-08-29-Elasticsearch-Kibana-using-Docker-Compose","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/elasticsearch/2019-08-29-Elasticsearch-Kibana-using-Docker-Compose.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"2019-09-17-Elasticsearch-Slow-Query-Log-Conf","permalink":"/docs/elasticsearch/2019-09-17-Elasticsearch-Slow-Query-Log-Conf"},"next":{"title":"Elasticsearch Single Node using Docker Compose","permalink":"/docs/elasticsearch/Elasticsearch-Kibana-Logstash-using-Docker-Compose"}}');var c=n(4848),t=n(8453);const o={},r=void 0,i={},l=[{value:"Preface",id:"preface",level:2},{value:"Deploy Elasticsearch + Kibana with docker-compose",id:"deploy-elasticsearch--kibana-with-docker-compose",level:2},{value:"Execute docker-compose up -d in the terminal",id:"execute-docker-compose-up--d-in-the-terminal",level:3}];function d(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.h2,{id:"preface",children:"Preface"}),"\n",(0,c.jsxs)(s.p,{children:["This post assumes that you have some basic understanding of Docker, Docker Compose, and the key components used in the docker ecosystem. Get up to speed, with the ",(0,c.jsx)(s.a,{href:"https://docs.docker.com/get-started/#prepare-your-docker-environment",children:"Prepare Your Docker Eenvironment"})," section of Docker docs."]}),"\n",(0,c.jsxs)(s.ol,{children:["\n",(0,c.jsxs)(s.li,{children:["Install ",(0,c.jsx)(s.a,{href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/",children:"Docker"})]}),"\n",(0,c.jsxs)(s.li,{children:["install ",(0,c.jsx)(s.a,{href:"https://docs.docker.com/compose/install/",children:"docker-compose"})]}),"\n"]}),"\n",(0,c.jsx)(s.h2,{id:"deploy-elasticsearch--kibana-with-docker-compose",children:"Deploy Elasticsearch + Kibana with docker-compose"}),"\n",(0,c.jsxs)(s.p,{children:["Elasticsearch Single Node Instance and Kibana Using Docker Compose. Create the ",(0,c.jsx)(s.code,{children:"docker-compose.yml"})," with the following"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-yaml",children:"version: '3'\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.1\n    container_name: elasticsearch\n    environment:\n      - node.name=vbv-es-node\n      - discovery.type=single-node\n      - cluster.name=vbv-es-data-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms1024m -Xmx1024m\"\n      # - xpack.security.enabled='false'\n      # - xpack.monitoring.enabled='false'\n      # - xpack.watcher.enabled='false'\n      # - xpack.ml.enabled='false'\n      # - http.cors.enabled='true'\n      # - http.cors.allow-origin=\"*\"\n      # - http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE\n      # - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type, Content-Length\n      - logger.level: debug\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - vbvesdata:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n      - 9300:9300\n    networks:\n      - esnet\n  kibana:\n    image: docker.elastic.co/kibana/kibana:8.2.1\n    container_name: kibana\n    environment:\n      SERVER_NAME: 127.0.0.1\n      ELASTICSEARCH_HOSTS: http://elasticsearch:9200\n      # XPACK_GRAPH_ENABLED: false\n      # XPACK_ML_ENABLED: false\n      # XPACK_REPORTING_ENABLED: false\n      # XPACK_SECURITY_ENABLED: false\n      # XPACK_WATCHER_ENABLED: false\n    ports:\n      - \"5601:5601\"\n    networks:\n      - esnet\n    depends_on:\n      - elasticsearch\n    restart: \"unless-stopped\"\n    \nvolumes:\n  vbvesdata:\n    driver: local\n\nnetworks:\n  esnet:\n"})}),"\n",(0,c.jsx)(s.h3,{id:"execute-docker-compose-up--d-in-the-terminal",children:"Execute docker-compose up -d in the terminal"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Elasticsearch is available at ",(0,c.jsx)(s.a,{href:"http://localhost:8100/",children:"http://localhost:8100/"})]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Kibana UI is up at ",(0,c.jsx)(s.a,{href:"http://localhost:5601/",children:"http://localhost:5601/"})]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>r});var a=n(6540);const c={},t=a.createContext(c);function o(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);