"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1659],{8264:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"k8s-cluster/InitializeControlPlane","title":"InitializeControlPlane","description":"Init Kubeadm Control Plane","source":"@site/docs/k8s-cluster/InitializeControlPlane.md","sourceDirName":"k8s-cluster","slug":"/k8s-cluster/InitializeControlPlane","permalink":"/docs/k8s-cluster/InitializeControlPlane","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/k8s-cluster/InitializeControlPlane.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Graceful Node Removal","permalink":"/docs/k8s-cluster/RemoveNode"},"next":{"title":"Ingress Nginx","permalink":"/docs/category/ingress-nginx"}}');var s=t(4848),r=t(8453);const a={},c=void 0,i={},l=[{value:"Init Kubeadm Control Plane",id:"init-kubeadm-control-plane",level:4}];function d(e){const n={code:"code",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h4,{id:"init-kubeadm-control-plane",children:"Init Kubeadm Control Plane"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'IPADDR="172.162.12.2"\nNODENAME=$(hostname -s)\nPOD_CIDR="192.168.0.0/16"\n'})}),"\n",(0,s.jsx)(n.p,{children:'Getting different public IPs for these servers\ncurl ifconfig.me && echo ""'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"kubeadm init \\\n    --apiserver-advertise-address=172.162.12.2 \\\n    --pod-network-cidr 192.168.0.0/16 \\\n    --node-name devops \\\n    --apiserver-cert-extra-sans=172.162.12.2 \n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# OUTPUT:\n\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  mkdir -p $HOME/.kube\n  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n  sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nAlternatively, if you are the root user, you can run:\n\n  export KUBECONFIG=/etc/kubernetes/admin.conf\n\nYou should now deploy a pod network to the cluster.\nRun "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nYou can now join any number of control-plane nodes by copying certificate authorities\nand service account keys on each node and then running the following as root:\n\n  kubeadm join 172.162.12.2:6443 --token mdv2ag.hfodxsw6c9e7e7vu \\\n\t--discovery-token-ca-cert-hash sha256:c79c320c52224f9ef4f61569d63dfc5c4d0b54161fbc0e0d1c031e5a1f412b82 \\\n\t--control-plane\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 172.162.12.2:6443 --token mdv2ag.hfodxsw6c9e7e7vu \\\n\t--discovery-token-ca-cert-hash sha256:c79c320c52224f9ef4f61569d63dfc5c4d0b54161fbc0e0d1c031e5a1f412b82\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(6540);const s={},r=o.createContext(s);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);