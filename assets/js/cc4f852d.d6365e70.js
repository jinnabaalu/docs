"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3412],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(6540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}},9967:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"elasticsearch/index/FulltextSearchVsExactMatch","title":"Full-Text Search vs Exact Match in Elasticsearch","description":"In Elasticsearch, not all searches are built the same. Some fields are meant to be searched (text), others to be matched (keyword).","source":"@site/docs/elasticsearch/index/FulltextSearchVsExactMatch.md","sourceDirName":"elasticsearch/index","slug":"/elasticsearch/index/FulltextSearchVsExactMatch","permalink":"/oio/docs/elasticsearch/index/FulltextSearchVsExactMatch","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/elasticsearch/index/FulltextSearchVsExactMatch.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Full-Text Search vs Exact Match in Elasticsearch"},"sidebar":"tutorialSidebar","previous":{"title":"Mappings","permalink":"/oio/docs/elasticsearch/index/Mappings"},"next":{"title":"Settings","permalink":"/oio/docs/elasticsearch/index/Settings"}}');var r=n(4848),a=n(8453);const i={sidebar_position:4,title:"Full-Text Search vs Exact Match in Elasticsearch"},c="\ud83d\udd0d Full-Text Search vs Exact Match in Elasticsearch \u2014 What You Actually Need to Know",d={},l=[{value:"\ud83e\udd39 Two Types of Search \u2014 Two Different Purposes",id:"-two-types-of-search--two-different-purposes",level:2},{value:"\ud83d\udee0\ufe0f Mapping That Supports Both",id:"\ufe0f-mapping-that-supports-both",level:2},{value:"\ud83d\udcc5 Inserting Sample Records",id:"-inserting-sample-records",level:2},{value:"\u26a1 Real-World Queries",id:"-real-world-queries",level:2},{value:"\ud83c\udfaf Full-text match (tokenized)",id:"-full-text-match-tokenized",level:3},{value:"\ud83e\uddf2 Exact match (non-tokenized)",id:"-exact-match-non-tokenized",level:3},{value:"\ud83d\udcca Aggregation on keyword field",id:"-aggregation-on-keyword-field",level:3},{value:"\ud83d\udc96 When to Use What?",id:"-when-to-use-what",level:2},{value:"\ud83e\udd20 Pro Tips",id:"-pro-tips",level:2},{value:"\ud83d\ude80 Wrap-up",id:"-wrap-up",level:2}];function h(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"-full-text-search-vs-exact-match-in-elasticsearch--what-you-actually-need-to-know",children:"\ud83d\udd0d Full-Text Search vs Exact Match in Elasticsearch \u2014 What You Actually Need to Know"})}),"\n",(0,r.jsxs)(t.p,{children:["In Elasticsearch, not all searches are built the same. Some fields are meant to be ",(0,r.jsx)(t.em,{children:"searched"})," (",(0,r.jsx)(t.code,{children:"text"}),"), others to be ",(0,r.jsx)(t.em,{children:"matched"})," (",(0,r.jsx)(t.code,{children:"keyword"}),")."]}),"\n",(0,r.jsx)(t.p,{children:"If you want both? Cool \u2014 just combine them."}),"\n",(0,r.jsx)(t.p,{children:"This post breaks down full-text vs exact match search, how to use both in your mappings, and why mixing them smartly makes your data \ud83d\udd25."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"-two-types-of-search--two-different-purposes",children:"\ud83e\udd39 Two Types of Search \u2014 Two Different Purposes"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"\ud83d\udd27 Feature"}),(0,r.jsxs)(t.th,{children:[(0,r.jsx)(t.code,{children:"text"})," (Full-text Search)"]}),(0,r.jsxs)(t.th,{children:[(0,r.jsx)(t.code,{children:"keyword"})," (Exact Match)"]})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Analyzed"}),(0,r.jsx)(t.td,{children:"\u2705 Yes (tokenized, normalized)"}),(0,r.jsx)(t.td,{children:"\u274c No (stored as-is)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Use Case"}),(0,r.jsx)(t.td,{children:"Search input like \u201cram\u201d or \u201cayodhya\u201d"}),(0,r.jsx)(t.td,{children:"Exact value like \u201cRam Ayodhya\u201d"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Common Queries"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"match"}),", ",(0,r.jsx)(t.code,{children:"multi_match"})]}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"term"}),", ",(0,r.jsx)(t.code,{children:"terms"}),", ",(0,r.jsx)(t.code,{children:"filter"}),", ",(0,r.jsx)(t.code,{children:"agg"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Sorting/Aggregation"}),(0,r.jsx)(t.td,{children:"\u274c Not reliable"}),(0,r.jsx)(t.td,{children:"\u2705 Perfect for both"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Field Type"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"text"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"keyword"})})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"\ufe0f-mapping-that-supports-both",children:"\ud83d\udee0\ufe0f Mapping That Supports Both"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'PUT user_fulltext_search_vs_exact_match\n{\n  "mappings": {\n    "properties": {\n      "name": {\n        "type": "text",  // \u2705 Full-text search\n        "fields": {\n          "keyword": {\n            "type": "keyword",        // \u2705 For exact match, sorting, aggregations\n            "ignore_above": 256       // \u26d8 Avoid storing massive strings\n          }\n        }\n      },\n      "email": {\n        "type": "keyword"  // \ud83d\udd10 Always keyword \u2014 we never full-text search emails\n      },\n      "description": {\n        "type": "text",     // \ud83d\udcdd For long-form search content\n        "analyzer": "standard"\n      },\n      "status": {\n        "type": "keyword"  // \ud83d\udfe2 For filters: active/inactive/etc\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"-inserting-sample-records",children:"\ud83d\udcc5 Inserting Sample Records"}),"\n",(0,r.jsx)(t.p,{children:"Before you search, you need data. Here's how to index a few sample docs into this setup:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'POST user_fulltext_search_vs_exact_match/_bulk\n{ "index": {} }\n{ "name": "Ram Ayodhya", "email": "ram@ayodhya.in", "description": "Ram is the king of Ayodhya and hero of Ramayana.", "status": "active" }\n{ "index": {} }\n{ "name": "Shri Ram of Ayodhya", "email": "shri@ayodhya.in", "description": "Shri Ram ruled Ayodhya with Dharma.", "status": "active" }\n{ "index": {} }\n{ "name": "Rama", "email": "rama@ayodhya.in", "description": "Rama is another name of Ram.", "status": "inactive" }\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"-real-world-queries",children:"\u26a1 Real-World Queries"}),"\n",(0,r.jsx)(t.h3,{id:"-full-text-match-tokenized",children:"\ud83c\udfaf Full-text match (tokenized)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'GET user_fulltext_search_vs_exact_match/_search\n{\n  "query": {\n    "match": {\n      "name": "ram"\n    }\n  }\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["\ud83e\udde0 ",(0,r.jsx)(t.strong,{children:"Why it works"}),": ",(0,r.jsx)(t.code,{children:"text"}),' is analyzed \u2192 "Ram Ayodhya" becomes ["ram", "ayodhya"] \u2192 hits!']}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"-exact-match-non-tokenized",children:"\ud83e\uddf2 Exact match (non-tokenized)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'GET user_fulltext_search_vs_exact_match/_search\n{\n  "query": {\n    "term": {\n      "name.keyword": "Ram Ayodhya"\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"-aggregation-on-keyword-field",children:"\ud83d\udcca Aggregation on keyword field"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'GET user_fulltext_search_vs_exact_match/_search\n{\n  "size": 0,\n  "aggs": {\n    "top_names": {\n      "terms": {\n        "field": "name.keyword"\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"-when-to-use-what",children:"\ud83d\udc96 When to Use What?"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Task"}),(0,r.jsx)(t.th,{children:"Field to Use"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Search a sentence/name"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Filter exact values"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name.keyword"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Aggregate top values"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name.keyword"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Sort alphabetically"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"name.keyword"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Match by email"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"email"})," (keyword)"]})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"-pro-tips",children:"\ud83e\udd20 Pro Tips"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Use multi-fields (",(0,r.jsx)(t.code,{children:"text + keyword"}),") when a field needs to be both searchable and aggregatable."]}),"\n",(0,r.jsx)(t.li,{children:"Don\u2019t overuse keyword fields on long text \u2014 leads to memory bloat."}),"\n",(0,r.jsxs)(t.li,{children:["Skip ",(0,r.jsx)(t.code,{children:".keyword"})," if you\u2019ll never need to sort/filter that field."]}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"-wrap-up",children:"\ud83d\ude80 Wrap-up"}),"\n",(0,r.jsxs)(t.p,{children:["If you want fast filtering ",(0,r.jsx)(t.strong,{children:"and"})," fuzzy searching, combine ",(0,r.jsx)(t.code,{children:"text"})," and ",(0,r.jsx)(t.code,{children:"keyword"})," in your mapping."]}),"\n",(0,r.jsx)(t.p,{children:"This way, your app gets:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\ud83e\udde0 Smart search with ",(0,r.jsx)(t.code,{children:"match"})]}),"\n",(0,r.jsxs)(t.li,{children:["\u26a1 Precise filters with ",(0,r.jsx)(t.code,{children:"term"})]}),"\n",(0,r.jsxs)(t.li,{children:["\ud83d\udcca Clean aggregations with ",(0,r.jsx)(t.code,{children:"keyword"})]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"No trade-offs. Just better UX."}),"\n",(0,r.jsx)(t.hr,{})]})}function o(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);