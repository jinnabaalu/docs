"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1906],{2278:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"elasticsearch/logstash/MaskingPII","title":"MaskingPII","description":"Masking Emails, Phone Numbers, and IPs in Logstash","source":"@site/docs/elasticsearch/logstash/MaskingPII.md","sourceDirName":"elasticsearch/logstash","slug":"/elasticsearch/logstash/MaskingPII","permalink":"/oio/docs/elasticsearch/logstash/MaskingPII","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/elasticsearch/logstash/MaskingPII.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udee1\ufe0f Logstash Data Masking & Compliance","permalink":"/oio/docs/ElasticStack/Logstash"},"next":{"title":"Elasticsearch Reindexing API","permalink":"/oio/docs/elasticsearch/2022-05-02-Reindexing-Guide"}}');var a=n(4848),i=n(8453);const c={},o=void 0,r={},l=[{value:"\u2699\ufe0f Logstash Pipeline",id:"\ufe0f-logstash-pipeline",level:2}];function d(e){const s={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"Masking Emails, Phone Numbers, and IPs in Logstash"}),"\n",(0,a.jsx)(s.p,{children:"PostgreSQL \u2192 Logstash (PII masking via mutate) \u2192 Elasticsearch."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"id | name     | email              | ip_address     | action       | timestamp\n---+----------+--------------------+----------------+--------------+-------------------\n1  | Alice    | alice@gmail.com    | 192.168.1.101  | login        | 2025-05-08 10:00\n2  | Bob      | bob@example.com    | 10.0.0.45      | update_email | 2025-05-08 10:10\n"})}),"\n",(0,a.jsx)(s.h2,{id:"\ufe0f-logstash-pipeline",children:"\u2699\ufe0f Logstash Pipeline"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-conf",children:'input {\n  jdbc {\n    jdbc_driver_class => "org.postgresql.Driver"\n    jdbc_connection_string => "jdbc:postgresql://db:5432/myapp"\n    jdbc_user => "user"\n    jdbc_password => "password"\n    schedule => "* * * * *"\n    statement => "SELECT * FROM user_activity"\n  }\n}\n\nfilter {\n  # Mask email\n  mutate {\n    gsub => [\n      "email", ".*", "[REDACTED]",\n      "name", ".*", "[REDACTED]",\n      "ip_address", "\\d+\\.\\d+\\.\\d+\\.\\d+", "[REDACTED]"\n    ]\n  }\n\n  # Optional: create custom tags or normalize fields\n  mutate {\n    lowercase => [ "action" ]\n  }\n}\n\noutput {\n  elasticsearch {\n    hosts => ["https://elasticsearch:9200"]\n    index => "user_activity"\n    user => "elastic"\n    password => "your_password"\n\n    ssl => true\n    cacert => "/usr/share/logstash/certs/ca.crt"\n  }\n}\n'})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var t=n(6540);const a={},i=t.createContext(a);function c(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);